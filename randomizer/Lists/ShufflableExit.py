'Shufflable exit class and list file.'
_b='From Museum'
_a='Creepy Castle Greenhouse to Main'
_Z='From Mill (Rear)'
_Y='From Mill (Front)'
_X='From Galleon (Tiny Entrance)'
_W='From Galleon (Lanky Entrance)'
_V='From Car Race'
_U='From Beetle Race'
_T='From Mountain'
_S='From Castle Lobby'
_R='From Caves Lobby'
_Q='From Fungi Lobby'
_P='From Galleon Lobby'
_O='From Factory Lobby'
_N='From Aztec Lobby'
_M='From Japes Lobby'
_L='From Lower Cave'
_K='From Factory Main'
_J='From Minecart'
_I=False
_H='From Japes Main'
_G='From Galleon Main'
_F='From Aztec Main'
_E='From Castle Main'
_D='From Fungi Main'
_C='From DK Isles'
_B='From Caves Main'
_A=True
from randomizer.Enums.ExitCategories import ExitCategories
from randomizer.Enums.Kongs import Kongs
from randomizer.Enums.Regions import Regions
from randomizer.Enums.Transitions import Transitions
from randomizer.LogicClasses import TransitionBack
class ShufflableExit:
	'Class that stores data about an exit to be shuffled.'
	def __init__(A,name,region,back,category=None,entryKongs={Kongs.donkey,Kongs.diddy,Kongs.lanky,Kongs.tiny,Kongs.chunky},regionKongs={},move=_I):'Initialize with given parameters.';A.name=name;A.region=region;A.back=back;A.category=category;A.entryKongs=entryKongs;A.regionKongs=regionKongs;A.move=move;A.shuffledId=None;A.shuffled=_I;A.toBeShuffled=_I
ShufflableExits={Transitions.IslesToJapes:ShufflableExit('DK Isles to Jungle Japes',Regions.JungleJapesLobby,TransitionBack(Regions.JungleJapesMain,_M,Transitions.JapesToIsles),ExitCategories.JapesLobby),Transitions.JapesToIsles:ShufflableExit('Jungle Japes to DK Isles',Regions.JungleJapesMain,TransitionBack(Regions.JungleJapesLobby,'From Japes',Transitions.IslesToJapes),ExitCategories.JapesExterior),Transitions.IslesToAztec:ShufflableExit('DK Isles to Angry Aztec',Regions.AngryAztecLobby,TransitionBack(Regions.AngryAztecStart,_N,Transitions.AztecToIsles),ExitCategories.AztecLobby),Transitions.AztecToIsles:ShufflableExit('Angry Aztec to DK Isles',Regions.AngryAztecStart,TransitionBack(Regions.AngryAztecLobby,'From Aztec',Transitions.IslesToAztec),ExitCategories.AztecExterior),Transitions.IslesToFactory:ShufflableExit('DK Isles to Frantic Factory',Regions.FranticFactoryLobby,TransitionBack(Regions.FranticFactoryStart,_O,Transitions.FactoryToIsles),ExitCategories.FactoryLobby),Transitions.FactoryToIsles:ShufflableExit('Frantic Factory to DK Isles',Regions.FranticFactoryStart,TransitionBack(Regions.FranticFactoryLobby,'From Factory',Transitions.IslesToFactory),ExitCategories.FactoryExterior),Transitions.IslesToGalleon:ShufflableExit('DK Isles to Gloomy Galleon',Regions.GloomyGalleonLobby,TransitionBack(Regions.GloomyGalleonStart,_P,Transitions.GalleonToIsles),ExitCategories.GalleonLobby),Transitions.GalleonToIsles:ShufflableExit('Gloomy Galleon to DK Isles',Regions.GloomyGalleonStart,TransitionBack(Regions.GloomyGalleonLobby,'From Galleon',Transitions.IslesToGalleon),ExitCategories.GalleonExterior),Transitions.IslesToForest:ShufflableExit('DK Isles to Fungi Forest',Regions.FungiForestLobby,TransitionBack(Regions.FungiForestStart,_Q,Transitions.ForestToIsles),ExitCategories.ForestLobby),Transitions.ForestToIsles:ShufflableExit('Fungi Forest to DK Isles',Regions.FungiForestStart,TransitionBack(Regions.FungiForestLobby,'From Fungi',Transitions.IslesToForest),ExitCategories.ForestExterior),Transitions.IslesToCaves:ShufflableExit('DK Isles to Crystal Caves',Regions.CrystalCavesLobby,TransitionBack(Regions.CrystalCavesMain,_R,Transitions.CavesToIsles),ExitCategories.CavesLobby),Transitions.CavesToIsles:ShufflableExit('Crystal Caves to DK Isles',Regions.CrystalCavesMain,TransitionBack(Regions.CrystalCavesLobby,'From Caves',Transitions.IslesToCaves),ExitCategories.CavesExterior),Transitions.IslesToCastle:ShufflableExit('DK Isles to Creepy Castle',Regions.CreepyCastleLobby,TransitionBack(Regions.CreepyCastleMain,_S,Transitions.CastleToIsles),ExitCategories.CastleLobby),Transitions.CastleToIsles:ShufflableExit('Creepy Castle to DK Isles',Regions.CreepyCastleMain,TransitionBack(Regions.CreepyCastleLobby,'From Castle',Transitions.IslesToCastle),ExitCategories.CastleExterior),Transitions.IslesMainToFairy:ShufflableExit('DK Isles Main to Banana Fairy Queen',Regions.IslesMain,TransitionBack(Regions.BananaFairyRoom,_C,Transitions.IslesFairyToMain),ExitCategories.IslesExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.IslesFairyToMain:ShufflableExit('DK Isles Banana Fairy Queen to Main',Regions.BananaFairyRoom,TransitionBack(Regions.IslesMain,'From Banana Fairy Isle',Transitions.IslesMainToFairy)),Transitions.IslesMainToSnideRoom:ShufflableExit('DK Isles Crocodile Isle to Snide Room',Regions.CrocodileIsleBeyondLift,TransitionBack(Regions.IslesSnideRoom,_C,Transitions.IslesSnideRoomToMain),ExitCategories.IslesExterior),Transitions.IslesSnideRoomToMain:ShufflableExit('DK Isles Snide Room to Crocodile Isle',Regions.IslesSnideRoom,TransitionBack(Regions.CrocodileIsleBeyondLift,"From Snide's Room",Transitions.IslesMainToSnideRoom)),Transitions.IslesMainToJapesLobby:ShufflableExit('DK Isles Main to Jungle Japes Lobby',Regions.IslesMain,TransitionBack(Regions.JungleJapesLobby,_C,Transitions.IslesJapesLobbyToMain),ExitCategories.IslesExterior),Transitions.IslesJapesLobbyToMain:ShufflableExit('DK Isles Jungle Japes Lobby to Main',Regions.JungleJapesLobby,TransitionBack(Regions.IslesMain,_M,Transitions.IslesMainToJapesLobby),ExitCategories.JapesLobby),Transitions.IslesMainToAztecLobby:ShufflableExit('DK Isles Main to Angry Aztec Lobby',Regions.IslesMain,TransitionBack(Regions.AngryAztecLobby,_C,Transitions.IslesAztecLobbyToMain),ExitCategories.IslesExterior),Transitions.IslesAztecLobbyToMain:ShufflableExit('DK Isles Angry Aztec Lobby to Main',Regions.AngryAztecLobby,TransitionBack(Regions.IslesMain,_N,Transitions.IslesMainToAztecLobby),ExitCategories.AztecLobby),Transitions.IslesMainToFactoryLobby:ShufflableExit('DK Isles Main to Frantic Factory Lobby',Regions.CrocodileIsleBeyondLift,TransitionBack(Regions.FranticFactoryLobby,_C,Transitions.IslesFactoryLobbyToMain),ExitCategories.IslesExterior),Transitions.IslesFactoryLobbyToMain:ShufflableExit('DK Isles Frantic Factory Lobby to Main',Regions.FranticFactoryLobby,TransitionBack(Regions.CrocodileIsleBeyondLift,_O,Transitions.IslesMainToFactoryLobby),ExitCategories.FactoryLobby),Transitions.IslesMainToGalleonLobby:ShufflableExit('DK Isles Main to Gloomy Galleon Lobby',Regions.IslesMain,TransitionBack(Regions.GloomyGalleonLobby,_C,Transitions.IslesGalleonLobbyToMain),ExitCategories.IslesExterior),Transitions.IslesGalleonLobbyToMain:ShufflableExit('DK Isles Gloomy Galleon Lobby to Main',Regions.GloomyGalleonLobby,TransitionBack(Regions.IslesMain,_P,Transitions.IslesMainToGalleonLobby),ExitCategories.GalleonLobby),Transitions.IslesMainToForestLobby:ShufflableExit('DK Isles Cabin Isle to Fungi Forest Lobby',Regions.CabinIsle,TransitionBack(Regions.FungiForestLobby,_C,Transitions.IslesForestLobbyToMain),ExitCategories.IslesExterior),Transitions.IslesForestLobbyToMain:ShufflableExit('DK Isles Fungi Forest Lobby to Cabin Isle',Regions.FungiForestLobby,TransitionBack(Regions.IslesMain,_Q,Transitions.IslesMainToForestLobby),ExitCategories.ForestLobby),Transitions.IslesMainToCavesLobby:ShufflableExit('DK Isles Main to Crystal Caves Lobby',Regions.IslesMain,TransitionBack(Regions.CrystalCavesLobby,_C,Transitions.IslesCavesLobbyToMain),ExitCategories.IslesExterior),Transitions.IslesCavesLobbyToMain:ShufflableExit('DK Isles Crystal Caves Lobby to Main',Regions.CrystalCavesLobby,TransitionBack(Regions.IslesMain,_R,Transitions.IslesMainToCavesLobby),ExitCategories.CavesLobby),Transitions.IslesMainToCastleLobby:ShufflableExit('DK Isles Main to Creepy Castle Lobby',Regions.IslesMain,TransitionBack(Regions.CreepyCastleLobby,_C,Transitions.IslesCastleLobbyToMain),ExitCategories.IslesExterior),Transitions.IslesCastleLobbyToMain:ShufflableExit('DK Isles Creepy Castle Lobby to Main',Regions.CreepyCastleLobby,TransitionBack(Regions.IslesMain,_S,Transitions.IslesMainToCastleLobby),ExitCategories.CastleLobby),Transitions.JapesMainToMine:ShufflableExit('Jungle Japes Main to Mine',Regions.JungleJapesMain,TransitionBack(Regions.Mine,_H,Transitions.JapesMineToMain),ExitCategories.JapesExterior,entryKongs={Kongs.diddy},regionKongs={Kongs.diddy},move=_A),Transitions.JapesMineToMain:ShufflableExit('Jungle Japes Mine to Main',Regions.Mine,TransitionBack(Regions.JungleJapesMain,_T,Transitions.JapesMainToMine),ExitCategories.JapesMine),Transitions.JapesMainToLankyCave:ShufflableExit('Jungle Japes Main to Lanky Cave',Regions.JungleJapesMain,TransitionBack(Regions.JapesLankyCave,_H,Transitions.JapesLankyCaveToMain),ExitCategories.JapesExterior,entryKongs={Kongs.lanky},regionKongs={Kongs.lanky},move=_A),Transitions.JapesLankyCaveToMain:ShufflableExit('Jungle Japes Lanky Cave to Main',Regions.JapesLankyCave,TransitionBack(Regions.JungleJapesMain,'From Painting Room',Transitions.JapesMainToLankyCave)),Transitions.JapesMainToCatacomb:ShufflableExit('Jungle Japes Main to Catacomb',Regions.JungleJapesMain,TransitionBack(Regions.JapesCatacomb,_H,Transitions.JapesCatacombToMain),ExitCategories.JapesExterior,entryKongs={Kongs.chunky},regionKongs={Kongs.chunky}),Transitions.JapesCatacombToMain:ShufflableExit('Jungle Japes Catacomb to Main',Regions.JapesCatacomb,TransitionBack(Regions.JungleJapesMain,'From Underground',Transitions.JapesMainToCatacomb)),Transitions.JapesMainToTinyHive:ShufflableExit('Jungle Japes Main to Tiny Hive',Regions.JapesBeyondFeatherGate,TransitionBack(Regions.TinyHive,_H,Transitions.JapesTinyHiveToMain),ExitCategories.JapesExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.JapesTinyHiveToMain:ShufflableExit('Jungle Japes Tiny Hive to Main',Regions.TinyHive,TransitionBack(Regions.JapesBeyondFeatherGate,'From Beehive',Transitions.JapesMainToTinyHive)),Transitions.JapesMineToCarts:ShufflableExit('Jungle Japes Mine to Minecart',Regions.Mine,TransitionBack(Regions.JapesMinecarts,_T),ExitCategories.JapesMine,entryKongs={Kongs.diddy},regionKongs={Kongs.diddy}),Transitions.JapesCartsToMain:ShufflableExit('Jungle Japes Minecart to Main',Regions.JapesMinecarts,TransitionBack(Regions.JungleJapesMain,_J)),Transitions.AztecTempleToStart:ShufflableExit('Angry Aztec Temple to Start',Regions.TempleStart,TransitionBack(Regions.AngryAztecMain,'From Tiny Temple')),Transitions.AztecMainToDonkey:ShufflableExit('Angry Aztec Main to Donkey 5DT',Regions.AngryAztecMain,TransitionBack(Regions.DonkeyTemple,_F,Transitions.AztecDonkeyToMain),ExitCategories.AztecExterior,entryKongs={Kongs.donkey},regionKongs={Kongs.donkey},move=_A),Transitions.AztecDonkeyToMain:ShufflableExit('Angry Aztec Donkey 5DT to Main',Regions.DonkeyTemple,TransitionBack(Regions.AngryAztecMain,'From DK 5DTemple',Transitions.AztecMainToDonkey)),Transitions.AztecMainToDiddy:ShufflableExit('Angry Aztec Main to Diddy 5DT',Regions.AngryAztecMain,TransitionBack(Regions.DiddyTemple,_F,Transitions.AztecDiddyToMain),ExitCategories.AztecExterior,entryKongs={Kongs.diddy},regionKongs={Kongs.diddy},move=_A),Transitions.AztecDiddyToMain:ShufflableExit('Angry Aztec Diddy 5DT to Main',Regions.DiddyTemple,TransitionBack(Regions.AngryAztecMain,'From Diddy 5DTemple',Transitions.AztecMainToDiddy)),Transitions.AztecMainToLanky:ShufflableExit('Angry Aztec Main to Lanky 5DT',Regions.AngryAztecMain,TransitionBack(Regions.LankyTemple,_F,Transitions.AztecLankyToMain),ExitCategories.AztecExterior,entryKongs={Kongs.lanky},regionKongs={Kongs.lanky},move=_A),Transitions.AztecLankyToMain:ShufflableExit('Angry Aztec Lanky 5DT to Main',Regions.LankyTemple,TransitionBack(Regions.AngryAztecMain,'From Lanky 5DTemple',Transitions.AztecMainToLanky)),Transitions.AztecMainToTiny:ShufflableExit('Angry Aztec Main to Tiny 5DT',Regions.AngryAztecMain,TransitionBack(Regions.TinyTemple,_F,Transitions.AztecTinyToMain),ExitCategories.AztecExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.AztecTinyToMain:ShufflableExit('Angry Aztec Tiny 5DT To Main',Regions.TinyTemple,TransitionBack(Regions.AngryAztecMain,'From Tiny 5DTemple',Transitions.AztecMainToTiny)),Transitions.AztecMainToChunky:ShufflableExit('Angry Aztec Main to Chunky 5DT',Regions.AngryAztecMain,TransitionBack(Regions.ChunkyTemple,_F,Transitions.AztecChunkyToMain),ExitCategories.AztecExterior,entryKongs={Kongs.chunky},regionKongs={Kongs.chunky},move=_A),Transitions.AztecChunkyToMain:ShufflableExit('Angry Aztec Chunky 5DT to Main',Regions.ChunkyTemple,TransitionBack(Regions.AngryAztecMain,'From Chunky 5DTemple',Transitions.AztecMainToChunky)),Transitions.AztecMainToRace:ShufflableExit('Angry Aztec Main to Beetle Race',Regions.AngryAztecMain,TransitionBack(Regions.AztecTinyRace,_F,Transitions.AztecRaceToMain),ExitCategories.AztecExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.AztecRaceToMain:ShufflableExit('Angry Aztec Beetle Race to Main',Regions.AztecTinyRace,TransitionBack(Regions.AngryAztecMain,_U,Transitions.AztecMainToRace)),Transitions.AztecLlamaToMain:ShufflableExit('Angry Aztec Llama Temple to Main',Regions.LlamaTemple,TransitionBack(Regions.AngryAztecMain,'From Llama Temple')),Transitions.FactoryRandDToRace:ShufflableExit('Frantic Factory R&D to Car Race',Regions.RandD,TransitionBack(Regions.FactoryTinyRace,_K,Transitions.FactoryRaceToRandD),ExitCategories.FactoryExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.FactoryRaceToRandD:ShufflableExit('Frantic Factory Car Race to R&D',Regions.FactoryTinyRace,TransitionBack(Regions.FactoryTinyRaceLobby,_V,Transitions.FactoryRandDToRace)),Transitions.FactoryChunkyRoomToPower:ShufflableExit('Frantic Factory Chunky Room to Power Room',Regions.ChunkyRoomPlatform,TransitionBack(Regions.PowerHut,_K,Transitions.FactoryPowerToChunkyRoom),ExitCategories.FactoryExterior,entryKongs={Kongs.donkey},regionKongs={Kongs.donkey}),Transitions.FactoryPowerToChunkyRoom:ShufflableExit('Frantic Factory Power Room to Chunky Room',Regions.PowerHut,TransitionBack(Regions.BeyondHatch,'From Power Shed',Transitions.FactoryChunkyRoomToPower)),Transitions.FactoryBeyondHatchToInsideCore:ShufflableExit('Frantic Factory Beyond Hatch to Inside Core',Regions.BeyondHatch,TransitionBack(Regions.InsideCore,_K,Transitions.FactoryInsideCoreToBeyondHatch),ExitCategories.FactoryExterior,regionKongs={Kongs.donkey,Kongs.lanky}),Transitions.FactoryInsideCoreToBeyondHatch:ShufflableExit('Frantic Factory Inside Core to Beyond Hatch',Regions.InsideCore,TransitionBack(Regions.BeyondHatch,'From Crusher Room',Transitions.FactoryBeyondHatchToInsideCore)),Transitions.GalleonLighthouseAreaToLighthouse:ShufflableExit('Gloomy Galleon Main to Lighthouse',Regions.LighthouseArea,TransitionBack(Regions.Lighthouse,_G,Transitions.GalleonLighthouseToLighthouseArea),ExitCategories.GalleonExterior,entryKongs={Kongs.donkey},regionKongs={Kongs.donkey}),Transitions.GalleonLighthouseToLighthouseArea:ShufflableExit('Gloomy Galleon Lighthouse to Main',Regions.Lighthouse,TransitionBack(Regions.LighthouseArea,'From Lighthouse',Transitions.GalleonLighthouseAreaToLighthouse)),Transitions.GalleonLighthousAreaToMermaid:ShufflableExit('Gloomy Galleon Main to Mermaid Room',Regions.LighthouseArea,TransitionBack(Regions.MermaidRoom,_G,Transitions.GalleonMermaidToLighthouseArea),ExitCategories.GalleonExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.GalleonMermaidToLighthouseArea:ShufflableExit('Gloomy Galleon Mermaid Room to Main',Regions.MermaidRoom,TransitionBack(Regions.LighthouseArea,'From Mermaid',Transitions.GalleonLighthousAreaToMermaid)),Transitions.GalleonLighthouseAreaToSickBay:ShufflableExit('Gloomy Galleon Main to Sick Bay',Regions.LighthouseArea,TransitionBack(Regions.SickBay,_G,Transitions.GalleonSickBayToLighthouseArea),ExitCategories.GalleonExterior,entryKongs={Kongs.chunky},regionKongs={Kongs.chunky},move=_A),Transitions.GalleonSickBayToLighthouseArea:ShufflableExit('Gloomy Galleon Sick Bay to Main',Regions.SickBay,TransitionBack(Regions.LighthouseArea,'From Seasick Ship',Transitions.GalleonLighthouseAreaToSickBay)),Transitions.GalleonShipyardToSeal:ShufflableExit('Gloomy Galleon Main to Seal Race',Regions.Shipyard,TransitionBack(Regions.SealRace,_G,Transitions.GalleonSealToShipyard),ExitCategories.GalleonExterior,entryKongs={Kongs.donkey},regionKongs={Kongs.donkey},move=_A),Transitions.GalleonSealToShipyard:ShufflableExit('Gloomy Galleon Seal Race to Main',Regions.SealRace,TransitionBack(Regions.Shipyard,'From Seal Race',Transitions.GalleonShipyardToSeal)),Transitions.GalleonShipyardToSubmarine:ShufflableExit('Gloomy Galleon Main to Submarine',Regions.Shipyard,TransitionBack(Regions.Submarine,_G,Transitions.GalleonSubmarineToShipyard),ExitCategories.GalleonExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.GalleonSubmarineToShipyard:ShufflableExit('Gloomy Galleon Submarine to Main',Regions.Submarine,TransitionBack(Regions.Shipyard,'From Submarine',Transitions.GalleonShipyardToSubmarine)),Transitions.GalleonShipyardToLanky:ShufflableExit('Gloomy Galleon Main to Lanky 2DS',Regions.Shipyard,TransitionBack(Regions.LankyShip,_W,Transitions.GalleonLankyToShipyard),ExitCategories.GalleonExterior,entryKongs={Kongs.lanky},regionKongs={Kongs.lanky}),Transitions.GalleonLankyToShipyard:ShufflableExit('Gloomy Galleon Lanky 2DS to Main',Regions.LankyShip,TransitionBack(Regions.Shipyard,'From Lanky 2DShip',Transitions.GalleonShipyardToLanky)),Transitions.GalleonShipyardToTiny:ShufflableExit('Gloomy Galleon Main to Tiny 2DS',Regions.Shipyard,TransitionBack(Regions.TinyShip,_X,Transitions.GalleonTinyToShipyard),ExitCategories.GalleonExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny}),Transitions.GalleonTinyToShipyard:ShufflableExit('Gloomy Galleon Tiny 2DS to Main',Regions.TinyShip,TransitionBack(Regions.Shipyard,'From Tiny 2DShip',Transitions.GalleonShipyardToTiny)),Transitions.GalleonShipyardToBongos:ShufflableExit('Gloomy Galleon Main to Donkey 5DS',Regions.Shipyard,TransitionBack(Regions.BongosShip,'From Galleon (DK Entrance)',Transitions.GalleonBongosToShipyard),ExitCategories.GalleonExterior,entryKongs={Kongs.donkey},regionKongs={Kongs.donkey},move=_A),Transitions.GalleonBongosToShipyard:ShufflableExit('Gloomy Galleon Donkey 5DS to Main',Regions.BongosShip,TransitionBack(Regions.Shipyard,'From Donkey 5DShip',Transitions.GalleonShipyardToBongos)),Transitions.GalleonShipyardToGuitar:ShufflableExit('Gloomy Galleon Main to Diddy 5DS',Regions.Shipyard,TransitionBack(Regions.GuitarShip,'From Galleon (Diddy Entrance)',Transitions.GalleonGuitarToShipyard),ExitCategories.GalleonExterior,entryKongs={Kongs.diddy},regionKongs={Kongs.diddy},move=_A),Transitions.GalleonGuitarToShipyard:ShufflableExit('Gloomy Galleon Diddy 5DS to Main',Regions.GuitarShip,TransitionBack(Regions.Shipyard,'From Diddy 5DShip',Transitions.GalleonShipyardToGuitar)),Transitions.GalleonShipyardToTrombone:ShufflableExit('Gloomy Galleon Main to Lanky 5DS',Regions.Shipyard,TransitionBack(Regions.TromboneShip,_W,Transitions.GalleonTromboneToShipyard),ExitCategories.GalleonExterior,entryKongs={Kongs.lanky},regionKongs={Kongs.lanky},move=_A),Transitions.GalleonTromboneToShipyard:ShufflableExit('Gloomy Galleon Lanky 5DS to Main',Regions.TromboneShip,TransitionBack(Regions.Shipyard,'From Lanky 5DShip',Transitions.GalleonShipyardToTrombone)),Transitions.GalleonShipyardToSaxophone:ShufflableExit('Gloomy Galleon Main to Tiny 5DS',Regions.Shipyard,TransitionBack(Regions.SaxophoneShip,_X,Transitions.GalleonSaxophoneToShipyard),ExitCategories.GalleonExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.GalleonSaxophoneToShipyard:ShufflableExit('Gloomy Galleon Tiny 5DS to Main',Regions.SaxophoneShip,TransitionBack(Regions.Shipyard,'From Tiny 5DShip',Transitions.GalleonShipyardToSaxophone)),Transitions.GalleonShipyardToTriangle:ShufflableExit('Gloomy Galleon Main to Chunky 5DS',Regions.Shipyard,TransitionBack(Regions.TriangleShip,'From Galleon (Chunky Entrance)',Transitions.GalleonTriangleToShipyard),ExitCategories.GalleonExterior,entryKongs={Kongs.chunky},regionKongs={Kongs.chunky},move=_A),Transitions.GalleonTriangleToShipyard:ShufflableExit('Gloomy Galleon Chunky 5DS to Main',Regions.TriangleShip,TransitionBack(Regions.Shipyard,'From Chunky 5DShip',Transitions.GalleonShipyardToTriangle)),Transitions.GalleonTreasureToChest:ShufflableExit('Gloomy Galleon Main to Chest',Regions.TreasureRoom,TransitionBack(Regions.TinyChest,_G,Transitions.GalleonChestToTreasure),ExitCategories.GalleonExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.GalleonChestToTreasure:ShufflableExit('Gloomy Galleon Chest to Main',Regions.TinyChest,TransitionBack(Regions.TreasureRoom,'From Treasure Chest',Transitions.GalleonTreasureToChest)),Transitions.ForestMainToCarts:ShufflableExit('Fungi Forest Main To Minecart',Regions.FungiForestStart,TransitionBack(Regions.ForestMinecarts,_D),ExitCategories.ForestExterior,entryKongs={Kongs.chunky},regionKongs={Kongs.chunky}),Transitions.ForestCartsToMain:ShufflableExit('Fungi Forest Minecart To Main',Regions.ForestMinecarts,TransitionBack(Regions.MillArea,_J)),Transitions.ForestMainToLowerMushroom:ShufflableExit('Fungi Forest Main to Mushroom Lower',Regions.GiantMushroomArea,TransitionBack(Regions.MushroomLower,'From Fungi (Low)',Transitions.ForestLowerMushroomToMain),ExitCategories.ForestExterior),Transitions.ForestLowerMushroomToMain:ShufflableExit('Fungi Forest Mushroom Lower to Main',Regions.MushroomLower,TransitionBack(Regions.GiantMushroomArea,'From G. Mush (Low)',Transitions.ForestMainToLowerMushroom),ExitCategories.ForestMushroom),Transitions.ForestLowerExteriorToLowerMushroom:ShufflableExit('Fungi Forest Lower Exterior to Lower Mushroom',Regions.MushroomLowerExterior,TransitionBack(Regions.MushroomLower,'From Fungi (Low Middle)',Transitions.ForestLowerMushroomToLowerExterior),ExitCategories.ForestExterior),Transitions.ForestLowerMushroomToLowerExterior:ShufflableExit('Fungi Forest Lower Mushroom to Lower Exterior',Regions.MushroomLower,TransitionBack(Regions.MushroomLowerExterior,'From G. Mush (Low Middle)',Transitions.ForestLowerExteriorToLowerMushroom),ExitCategories.ForestMushroom),Transitions.ForestLowerExteriorToUpperMushroom:ShufflableExit('Fungi Forest Lower Exterior to Upper Mushroom',Regions.MushroomLowerExterior,TransitionBack(Regions.MushroomLower,'From Fungi (Middle)',Transitions.ForestUpperMushroomToLowerExterior),ExitCategories.ForestExterior),Transitions.ForestUpperMushroomToLowerExterior:ShufflableExit('Fungi Forest Upper Mushroom to Lower Exterior',Regions.MushroomUpper,TransitionBack(Regions.MushroomLowerExterior,'From G. Mush (Middle)',Transitions.ForestLowerExteriorToUpperMushroom),ExitCategories.ForestMushroom),Transitions.ForestUpperExteriorToUpperMushroom:ShufflableExit('Fungi Forest Upper Exterior to Upper Mushroom',Regions.MushroomUpperExterior,TransitionBack(Regions.MushroomUpper,'From Fungi (High)',Transitions.ForestUpperMushroomToUpperExterior),ExitCategories.ForestExterior),Transitions.ForestUpperMushroomToUpperExterior:ShufflableExit('Fungi Forest Upper Mushroom to Upper Exterior',Regions.MushroomUpper,TransitionBack(Regions.MushroomUpperExterior,'From G. Mush (High)',Transitions.ForestUpperExteriorToUpperMushroom),ExitCategories.ForestMushroom),Transitions.ForestExteriorToNight:ShufflableExit('Fungi Forest Night Exterior to Night Door',Regions.MushroomNightExterior,TransitionBack(Regions.MushroomNightDoor,'From Fungi (High Middle)',Transitions.ForestNightToExterior),ExitCategories.ForestExterior),Transitions.ForestNightToExterior:ShufflableExit('Fungi Forest Night Door to Night Exterior',Regions.MushroomNightDoor,TransitionBack(Regions.MushroomNightExterior,'From G. Mush (High Middle)',Transitions.ForestExteriorToNight),ExitCategories.ForestMushroom),Transitions.ForestExteriorToChunky:ShufflableExit('Fungi Forest Upper Exterior to Chunky Room',Regions.MushroomUpperExterior,TransitionBack(Regions.MushroomChunkyRoom,_D,Transitions.ForestChunkyToExterior),ExitCategories.ForestExterior,entryKongs={Kongs.chunky},regionKongs={Kongs.chunky}),Transitions.ForestChunkyToExterior:ShufflableExit('Fungi Forest Chunky Room to Upper Exterior',Regions.MushroomChunkyRoom,TransitionBack(Regions.MushroomUpperExterior,'From Face Puzzle (Chunky)',Transitions.ForestExteriorToChunky)),Transitions.ForestExteriorToZingers:ShufflableExit('Fungi Forest Upper Exterior to Zinger Room',Regions.MushroomUpperExterior,TransitionBack(Regions.MushroomLankyZingersRoom,_D,Transitions.ForestZingersToExterior),ExitCategories.ForestExterior,entryKongs={Kongs.lanky},regionKongs={Kongs.lanky}),Transitions.ForestZingersToExterior:ShufflableExit('Fungi Forest Zinger Room to Upper Exterior',Regions.MushroomLankyZingersRoom,TransitionBack(Regions.MushroomUpperExterior,'From Zingers Room (Lanky)',Transitions.ForestExteriorToZingers)),Transitions.ForestExteriorToMushrooms:ShufflableExit('Fungi Forest Upper Exterior to Mushroom Room',Regions.MushroomUpperExterior,TransitionBack(Regions.MushroomLankyMushroomsRoom,_D,Transitions.ForestMushroomsToExterior),ExitCategories.ForestExterior,entryKongs={Kongs.lanky},regionKongs={Kongs.lanky}),Transitions.ForestMushroomsToExterior:ShufflableExit('Fungi Forest Mushroom Room to Upper Exterior',Regions.MushroomLankyMushroomsRoom,TransitionBack(Regions.MushroomUpperExterior,'From Mushrooms Room (Lanky)',Transitions.ForestExteriorToMushrooms)),Transitions.ForestTreeToAnthill:ShufflableExit('Fungi Forest Hollow Tree Area to Anthill',Regions.HollowTreeArea,TransitionBack(Regions.Anthill,_D,Transitions.ForestAnthillToTree),ExitCategories.ForestExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.ForestAnthillToTree:ShufflableExit('Fungi Forest Anthill to Hollow Tree Area',Regions.Anthill,TransitionBack(Regions.HollowTreeArea,'From Anthill',Transitions.ForestTreeToAnthill)),Transitions.ForestMainToChunkyMill:ShufflableExit('Fungi Forest Main to Mill Chunky Door',Regions.MillArea,TransitionBack(Regions.MillChunkyArea,'From Fungi (PPunch Door)',Transitions.ForestChunkyMillToMain),ExitCategories.ForestExterior,entryKongs={Kongs.chunky},regionKongs={Kongs.chunky},move=_A),Transitions.ForestChunkyMillToMain:ShufflableExit('Fungi Forest Mill Chunky Door to Main',Regions.MillChunkyArea,TransitionBack(Regions.MillArea,'From Mill (PPunch Door)',Transitions.ForestMainToChunkyMill),ExitCategories.ForestMill,entryKongs={Kongs.chunky}),Transitions.ForestMainToTinyMill:ShufflableExit('Fungi Forest Main to Mill Tiny Entrance',Regions.MillArea,TransitionBack(Regions.MillTinyArea,'From Fungi (Tiny Hole)',Transitions.ForestTinyMillToMain),ExitCategories.ForestExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.ForestTinyMillToMain:ShufflableExit('Fungi Forest Mill Tiny Entrance to Main',Regions.MillTinyArea,TransitionBack(Regions.MillArea,'From Mill (Tiny Hole)',Transitions.ForestMainToTinyMill),ExitCategories.ForestMill,entryKongs={Kongs.tiny}),Transitions.ForestMainToGrinder:ShufflableExit('Fungi Forest Main to Grinder Room',Regions.MillArea,TransitionBack(Regions.GrinderRoom,'From Fungi (Front)',Transitions.ForestGrinderToMain),ExitCategories.ForestExterior),Transitions.ForestGrinderToMain:ShufflableExit('Fungi Forest Grinder Room to Main',Regions.GrinderRoom,TransitionBack(Regions.MillArea,_Y,Transitions.ForestMainToGrinder),ExitCategories.ForestGrinder),Transitions.ForestMainToRafters:ShufflableExit('Fungi Forest Main to Rafters',Regions.MillArea,TransitionBack(Regions.MillRafters,_D,Transitions.ForestRaftersToMain),ExitCategories.ForestExterior,entryKongs={Kongs.diddy},regionKongs={Kongs.diddy},move=_A),Transitions.ForestRaftersToMain:ShufflableExit('Fungi Forest Rafters to Main',Regions.MillRafters,TransitionBack(Regions.MillArea,'From Rafters',Transitions.ForestMainToRafters)),Transitions.ForestMainToWinch:ShufflableExit('Fungi Forest Main to Winch Room',Regions.MillArea,TransitionBack(Regions.WinchRoom,_D,Transitions.ForestWinchToMain),ExitCategories.ForestExterior,entryKongs={Kongs.diddy},regionKongs={Kongs.diddy}),Transitions.ForestWinchToMain:ShufflableExit('Fungi Forest Winch Room to Main',Regions.WinchRoom,TransitionBack(Regions.MillArea,'From Winch',Transitions.ForestMainToWinch)),Transitions.ForestMainToAttic:ShufflableExit('Fungi Forest Main to Mill Attic',Regions.MillArea,TransitionBack(Regions.MillAttic,_D,Transitions.ForestAtticToMain),ExitCategories.ForestExterior,regionKongs={Kongs.lanky}),Transitions.ForestAtticToMain:ShufflableExit('Fungi Forest Mill Attic to Main',Regions.MillAttic,TransitionBack(Regions.MillArea,'From Mill Attic',Transitions.ForestMainToAttic)),Transitions.ForestTinyMillToSpider:ShufflableExit('Fungi Forest Mill to Spider Boss',Regions.MillTinyArea,TransitionBack(Regions.SpiderRoom,_Z,Transitions.ForestSpiderToTinyMill),ExitCategories.ForestMill,regionKongs={Kongs.tiny}),Transitions.ForestSpiderToTinyMill:ShufflableExit('Fungi Forest Spider Boss to Mill',Regions.SpiderRoom,TransitionBack(Regions.MillTinyArea,'From Spider Boss',Transitions.ForestTinyMillToSpider),regionKongs={Kongs.tiny}),Transitions.ForestTinyMillToGrinder:ShufflableExit('Fungi Forest Tiny Entrance to Grinder Room',Regions.MillTinyArea,TransitionBack(Regions.GrinderRoom,_Z,Transitions.ForestGrinderToTinyMill),ExitCategories.ForestMill,entryKongs={Kongs.tiny},move=_A),Transitions.ForestGrinderToTinyMill:ShufflableExit('Fungi Forest Grinder Room to Tiny Entrance',Regions.GrinderRoom,TransitionBack(Regions.MillTinyArea,_Y,Transitions.ForestTinyMillToGrinder),ExitCategories.ForestGrinder,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.ForestMainToBarn:ShufflableExit('Fungi Forest Main to Thornvine Barn',Regions.ThornvineArea,TransitionBack(Regions.ThornvineBarn,_D,Transitions.ForestBarnToMain),ExitCategories.ForestExterior,entryKongs={Kongs.donkey},regionKongs={Kongs.donkey}),Transitions.ForestBarnToMain:ShufflableExit('Fungi Forest Thornvine Barn to Main',Regions.ThornvineBarn,TransitionBack(Regions.ThornvineArea,'From Thornvine Barn',Transitions.ForestMainToBarn)),Transitions.CavesMainToRace:ShufflableExit('Crystal Caves Main to Beetle Race',Regions.CrystalCavesMain,TransitionBack(Regions.CavesLankyRace,_B,Transitions.CavesRaceToMain),ExitCategories.CavesExterior,entryKongs={Kongs.lanky},regionKongs={Kongs.lanky},move=_A),Transitions.CavesRaceToMain:ShufflableExit('Crystal Caves Beetle Race to Main',Regions.CavesLankyRace,TransitionBack(Regions.CrystalCavesMain,_U,Transitions.CavesMainToRace)),Transitions.CavesMainToCastle:ShufflableExit('Crystal Caves Main to Frozen Castle',Regions.CrystalCavesMain,TransitionBack(Regions.FrozenCastle,_B,Transitions.CavesCastleToMain),ExitCategories.CavesExterior,entryKongs={Kongs.lanky},regionKongs={Kongs.lanky}),Transitions.CavesCastleToMain:ShufflableExit('Crystal Caves Frozen Castle to Main',Regions.FrozenCastle,TransitionBack(Regions.CrystalCavesMain,'From Tile Flipping',Transitions.CavesMainToCastle)),Transitions.CavesIglooToDonkey:ShufflableExit('Crystal Caves Main to Donkey 5DI',Regions.IglooArea,TransitionBack(Regions.DonkeyIgloo,_B,Transitions.CavesDonkeyToIgloo),ExitCategories.CavesExterior,entryKongs={Kongs.donkey},regionKongs={Kongs.donkey},move=_A),Transitions.CavesDonkeyToIgloo:ShufflableExit('Crystal Caves Donkey 5DI to Main',Regions.DonkeyIgloo,TransitionBack(Regions.IglooArea,'From DK 5DIgloo',Transitions.CavesIglooToDonkey)),Transitions.CavesIglooToDiddy:ShufflableExit('Crystal Caves Main to Diddy 5DI',Regions.IglooArea,TransitionBack(Regions.DiddyIgloo,_B,Transitions.CavesDiddyToIgloo),ExitCategories.CavesExterior,entryKongs={Kongs.diddy},regionKongs={Kongs.diddy},move=_A),Transitions.CavesDiddyToIgloo:ShufflableExit('Crystal Caves Diddy 5DI to Main',Regions.DiddyIgloo,TransitionBack(Regions.IglooArea,'From Diddy 5DIgloo',Transitions.CavesIglooToDiddy)),Transitions.CavesIglooToLanky:ShufflableExit('Crystal Caves Main to Lanky 5DI',Regions.IglooArea,TransitionBack(Regions.LankyIgloo,_B,Transitions.CavesLankyToIgloo),ExitCategories.CavesExterior,entryKongs={Kongs.lanky},regionKongs={Kongs.lanky},move=_A),Transitions.CavesLankyToIgloo:ShufflableExit('Crystal Caves Lanky 5DI to Main',Regions.LankyIgloo,TransitionBack(Regions.IglooArea,'From Lanky 5DIgloo',Transitions.CavesIglooToLanky)),Transitions.CavesIglooToTiny:ShufflableExit('Crystal Caves Main to Tiny 5DI',Regions.IglooArea,TransitionBack(Regions.TinyIgloo,_B,Transitions.CavesTinyToIgloo),ExitCategories.CavesExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.CavesTinyToIgloo:ShufflableExit('Crystal Caves Tiny 5DI to Main',Regions.TinyIgloo,TransitionBack(Regions.IglooArea,'From Tiny 5DIgloo',Transitions.CavesIglooToTiny)),Transitions.CavesIglooToChunky:ShufflableExit('Crystal Caves Main to Chunky 5DI',Regions.IglooArea,TransitionBack(Regions.ChunkyIgloo,_B,Transitions.CavesChunkyToIgloo),ExitCategories.CavesExterior,entryKongs={Kongs.chunky},regionKongs={Kongs.chunky},move=_A),Transitions.CavesChunkyToIgloo:ShufflableExit('Crystal Caves Chunky 5DI to Main',Regions.ChunkyIgloo,TransitionBack(Regions.IglooArea,'From Chunky 5DIgloo',Transitions.CavesIglooToChunky)),Transitions.CavesCabinToRotating:ShufflableExit('Crystal Caves Main to Rotating Cabin',Regions.CabinArea,TransitionBack(Regions.RotatingCabin,_B,Transitions.CavesRotatingToCabin),ExitCategories.CavesExterior,entryKongs={Kongs.donkey},regionKongs={Kongs.donkey},move=_A),Transitions.CavesRotatingToCabin:ShufflableExit('Crystal Caves Rotating Cabin to Main',Regions.RotatingCabin,TransitionBack(Regions.CabinArea,'From Rotating Cabin',Transitions.CavesCabinToRotating)),Transitions.CavesCabinToDonkey:ShufflableExit('Crystal Caves Main to Donkey 5DC',Regions.CabinArea,TransitionBack(Regions.DonkeyCabin,_B,Transitions.CavesDonkeyToCabin),ExitCategories.CavesExterior,entryKongs={Kongs.donkey},regionKongs={Kongs.donkey},move=_A),Transitions.CavesDonkeyToCabin:ShufflableExit('Crystal Caves Donkey 5DC to Main',Regions.DonkeyCabin,TransitionBack(Regions.CabinArea,'From DK 5DCabin',Transitions.CavesCabinToDonkey)),Transitions.CavesCabinToDiddyLower:ShufflableExit('Crystal Caves Main to Diddy Lower 5DC',Regions.CabinArea,TransitionBack(Regions.DiddyLowerCabin,_B,Transitions.CavesDiddyLowerToCabin),ExitCategories.CavesExterior,entryKongs={Kongs.diddy},regionKongs={Kongs.diddy},move=_A),Transitions.CavesDiddyLowerToCabin:ShufflableExit('Crystal Caves Diddy Lower 5DC to Main',Regions.DiddyLowerCabin,TransitionBack(Regions.CabinArea,'From Diddy Lower 5DCabin',Transitions.CavesCabinToDiddyLower)),Transitions.CavesCabinToDiddyUpper:ShufflableExit('Crystal Caves Main to Diddy Upper 5DC',Regions.CabinArea,TransitionBack(Regions.DiddyUpperCabin,_B,Transitions.CavesDiddyUpperToCabin),ExitCategories.CavesExterior,entryKongs={Kongs.diddy},regionKongs={Kongs.diddy},move=_A),Transitions.CavesDiddyUpperToCabin:ShufflableExit('Crystal Caves Diddy Upper 5DC to Main',Regions.DiddyUpperCabin,TransitionBack(Regions.CabinArea,'From Diddy Upper 5DCabin',Transitions.CavesCabinToDiddyUpper)),Transitions.CavesCabinToLanky:ShufflableExit('Crystal Caves Main to Lanky 1DC',Regions.CabinArea,TransitionBack(Regions.LankyCabin,_B,Transitions.CavesLankyToCabin),ExitCategories.CavesExterior,entryKongs={Kongs.lanky},regionKongs={Kongs.lanky},move=_A),Transitions.CavesLankyToCabin:ShufflableExit('Crystal Caves Lanky 1DC to Main',Regions.LankyCabin,TransitionBack(Regions.CabinArea,'From Lanky Cabin',Transitions.CavesCabinToLanky)),Transitions.CavesCabinToTiny:ShufflableExit('Crystal Caves Main to Tiny 5DC',Regions.CabinArea,TransitionBack(Regions.TinyCabin,_B,Transitions.CavesTinyToCabin),ExitCategories.CavesExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.CavesTinyToCabin:ShufflableExit('Crystal Caves Tiny 5DC to Main',Regions.TinyCabin,TransitionBack(Regions.CabinArea,'From Tiny 5DCabin',Transitions.CavesCabinToTiny)),Transitions.CavesCabinToChunky:ShufflableExit('Crystal Caves Main to Chunky 5DC',Regions.CabinArea,TransitionBack(Regions.ChunkyCabin,_B,Transitions.CavesChunkyToCabin),ExitCategories.CavesExterior,entryKongs={Kongs.chunky},regionKongs={Kongs.chunky},move=_A),Transitions.CavesChunkyToCabin:ShufflableExit('Crystal Caves Chunky 5DC to Main',Regions.ChunkyCabin,TransitionBack(Regions.CabinArea,'From Chunky 5DCabin',Transitions.CavesCabinToChunky)),Transitions.CastleMainToTree:ShufflableExit('Creepy Castle Main to Tree',Regions.CreepyCastleMain,TransitionBack(Regions.CastleTree,_E,Transitions.CastleTreeToMain),ExitCategories.CastleExterior,regionKongs={Kongs.donkey,Kongs.chunky}),Transitions.CastleTreeToMain:ShufflableExit('Creepy Castle Tree to Main',Regions.CastleTree,TransitionBack(Regions.CreepyCastleMain,'From Tree (Entrance)',Transitions.CastleMainToTree)),Transitions.CastleTreeDrainToMain:ShufflableExit('Creepy Castle Tree Drain to Main',Regions.CastleTree,TransitionBack(Regions.CreepyCastleMain,'From Tree (Drain)'),entryKongs={Kongs.donkey}),Transitions.CastleMainToLibraryStart:ShufflableExit('Creepy Castle Main to Library',Regions.CreepyCastleMain,TransitionBack(Regions.Library,'From Castle Main (Start)',Transitions.CastleLibraryStartToMain),ExitCategories.CastleExterior,entryKongs={Kongs.donkey},regionKongs={Kongs.donkey}),Transitions.CastleLibraryStartToMain:ShufflableExit('Creepy Castle Library Start to Main',Regions.Library,TransitionBack(Regions.CreepyCastleMain,'From Library (Start)',Transitions.CastleMainToLibraryStart)),Transitions.CastleMainToLibraryEnd:ShufflableExit('Creepy Castle Main to Library Back Door',Regions.CreepyCastleMain,TransitionBack(Regions.Library,'From Castle Main (End)'),ExitCategories.CastleExterior),Transitions.CastleLibraryEndToMain:ShufflableExit('Creepy Castle Library End to Main',Regions.Library,TransitionBack(Regions.CreepyCastleMain,'From Library (End)'),entryKongs={Kongs.donkey}),Transitions.CastleMainToBallroom:ShufflableExit('Creepy Castle Main to Ballroom',Regions.CreepyCastleMain,TransitionBack(Regions.Ballroom,_E,Transitions.CastleBallroomToMain),ExitCategories.CastleExterior,regionKongs={Kongs.diddy,Kongs.tiny}),Transitions.CastleBallroomToMain:ShufflableExit('Creepy Castle Ballroom to Main',Regions.Ballroom,TransitionBack(Regions.CreepyCastleMain,'From Ballroom',Transitions.CastleMainToBallroom),ExitCategories.CastleBallroom),Transitions.CastleMainToTower:ShufflableExit('Creepy Castle Main to Tower',Regions.CreepyCastleMain,TransitionBack(Regions.Tower,_E,Transitions.CastleTowerToMain),ExitCategories.CastleExterior,entryKongs={Kongs.lanky},regionKongs={Kongs.lanky}),Transitions.CastleTowerToMain:ShufflableExit('Creepy Castle Tower to Main',Regions.Tower,TransitionBack(Regions.CreepyCastleMain,'From Tower',Transitions.CastleMainToTower)),Transitions.CastleMainToGreenhouse:ShufflableExit('Creepy Castle Main to Greenhouse',Regions.CreepyCastleMain,TransitionBack(Regions.Greenhouse,_E,Transitions.CastleGreenhouseStartToMain),ExitCategories.CastleExterior,entryKongs={Kongs.lanky},regionKongs={Kongs.lanky}),Transitions.CastleGreenhouseStartToMain:ShufflableExit(_a,Regions.Greenhouse,TransitionBack(Regions.CreepyCastleMain,'From Greenhouse (Start)',Transitions.CastleMainToGreenhouse)),Transitions.CastleGreenhouseEndToMain:ShufflableExit(_a,Regions.Greenhouse,TransitionBack(Regions.CreepyCastleMain,'From Greenhouse (End)'),entryKongs={Kongs.lanky}),Transitions.CastleMainToTrash:ShufflableExit('Creepy Castle Main to Trash Can',Regions.CreepyCastleMain,TransitionBack(Regions.TrashCan,_E,Transitions.CastleTrashToMain),ExitCategories.CastleExterior,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny},move=_A),Transitions.CastleTrashToMain:ShufflableExit('Creepy Castle Trash Can to Main',Regions.TrashCan,TransitionBack(Regions.CreepyCastleMain,'From Trash Can',Transitions.CastleMainToTrash)),Transitions.CastleMainToShed:ShufflableExit('Creepy Castle Main to Shed',Regions.CreepyCastleMain,TransitionBack(Regions.Shed,_E,Transitions.CastleShedToMain),ExitCategories.CastleExterior,entryKongs={Kongs.chunky},regionKongs={Kongs.chunky},move=_A),Transitions.CastleShedToMain:ShufflableExit('Creepy Castle Shed to Main',Regions.Shed,TransitionBack(Regions.CreepyCastleMain,'From Shed',Transitions.CastleMainToShed)),Transitions.CastleMainToMuseum:ShufflableExit('Creepy Castle Main to Museum',Regions.CreepyCastleMain,TransitionBack(Regions.Museum,_E,Transitions.CastleMuseumToMain),ExitCategories.CastleExterior,entryKongs={Kongs.chunky},regionKongs={Kongs.chunky}),Transitions.CastleMuseumToMain:ShufflableExit('Creepy Castle Museum to Main',Regions.Museum,TransitionBack(Regions.CreepyCastleMain,_b,Transitions.CastleMainToMuseum)),Transitions.CastleMainToLower:ShufflableExit('Creepy Castle Main to Lower Cave',Regions.CreepyCastleMain,TransitionBack(Regions.LowerCave,_E,Transitions.CastleLowerToMain),ExitCategories.CastleExterior),Transitions.CastleLowerToMain:ShufflableExit('Creepy Castle Lower Cave to Main',Regions.LowerCave,TransitionBack(Regions.CreepyCastleMain,_L,Transitions.CastleMainToLower),ExitCategories.CastleLower),Transitions.CastleMainToUpper:ShufflableExit('Creepy Castle Main to Upper Cave',Regions.CreepyCastleMain,TransitionBack(Regions.UpperCave,'From Castle (Rear)',Transitions.CastleUpperToMain),ExitCategories.CastleExterior),Transitions.CastleUpperToMain:ShufflableExit('Creepy Castle Upper Cave to Main',Regions.UpperCave,TransitionBack(Regions.CreepyCastleMain,'From Tunnel (Rear)',Transitions.CastleMainToUpper),ExitCategories.CastleUpper),Transitions.CastleWaterfallToUpper:ShufflableExit('Creepy Castle Waterfall to Upper Cave',Regions.CastleWaterfall,TransitionBack(Regions.UpperCave,'From Castle (Front)',Transitions.CastleUpperToWaterfall),ExitCategories.CastleExterior),Transitions.CastleUpperToWaterfall:ShufflableExit('Creepy Castle Upper Cave to Waterfall',Regions.UpperCave,TransitionBack(Regions.CreepyCastleMain,'From Tunnel (Front)',Transitions.CastleWaterfallToUpper),ExitCategories.CastleUpper),Transitions.CastleBallroomToMuseum:ShufflableExit('Creepy Castle Ballroom to Museum',Regions.Ballroom,TransitionBack(Regions.MuseumBehindGlass,'From Ballroom (Monkeyport)',Transitions.CastleMuseumToBallroom),ExitCategories.CastleBallroom,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny}),Transitions.CastleMuseumToBallroom:ShufflableExit('Creepy Castle Museum to Ballroom',Regions.MuseumBehindGlass,TransitionBack(Regions.Ballroom,'From Museum (Monkeyport)',Transitions.CastleBallroomToMuseum),ExitCategories.CastleBallroom,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny}),Transitions.CastleMuseumToCarRace:ShufflableExit('Creepy Castle Museum to Car Race',Regions.MuseumBehindGlass,TransitionBack(Regions.CastleTinyRace,_b,Transitions.CastleRaceToMuseum),ExitCategories.CastleBallroom,entryKongs={Kongs.tiny},regionKongs={Kongs.tiny}),Transitions.CastleRaceToMuseum:ShufflableExit('Creepy Castle Car Race to Museum',Regions.CastleTinyRace,TransitionBack(Regions.MuseumBehindGlass,_V,Transitions.CastleMuseumToCarRace),regionKongs={Kongs.tiny}),Transitions.CastleLowerToCrypt:ShufflableExit('Creepy Castle Lower Cave to Crypt',Regions.LowerCave,TransitionBack(Regions.Crypt,_L,Transitions.CastleCryptToLower),ExitCategories.CastleLower,entryKongs={Kongs.donkey,Kongs.diddy,Kongs.chunky},regionKongs={Kongs.donkey,Kongs.diddy,Kongs.chunky}),Transitions.CastleCryptToLower:ShufflableExit('Creepy Castle Crypt to Lower Cave',Regions.Crypt,TransitionBack(Regions.LowerCave,'From Crypt (DK/Diddy/Chunky)',Transitions.CastleLowerToCrypt),ExitCategories.CastleCrypt),Transitions.CastleLowerToMausoleum:ShufflableExit('Creepy Castle Lower Cave to Mausoleum',Regions.LowerCave,TransitionBack(Regions.Mausoleum,_L,Transitions.CastleMausoleumToLower),ExitCategories.CastleLower,entryKongs={Kongs.lanky,Kongs.tiny},regionKongs={Kongs.lanky,Kongs.tiny}),Transitions.CastleMausoleumToLower:ShufflableExit('Creepy Castle Mausoleum to Lower cave',Regions.Mausoleum,TransitionBack(Regions.LowerCave,'From Mausoleum (Lanky/Tiny)',Transitions.CastleLowerToMausoleum)),Transitions.CastleCryptToCarts:ShufflableExit('Creepy Castle Crypt to Minecarts',Regions.Crypt,TransitionBack(Regions.CastleMinecarts,'From Crypt',Transitions.CastleCartsToCrypt),ExitCategories.CastleCrypt,entryKongs={Kongs.donkey},regionKongs={Kongs.donkey}),Transitions.CastleCartsToCrypt:ShufflableExit('Creepy Castle Minecarts to Crypt',Regions.CastleMinecarts,TransitionBack(Regions.Crypt,_J,Transitions.CastleCryptToCarts)),Transitions.CastleUpperToDungeon:ShufflableExit('Creepy Castle Upper Cave to Dungeon',Regions.UpperCave,TransitionBack(Regions.Dungeon,'From Tunnel',Transitions.CastleDungeonToUpper),ExitCategories.CastleUpper),Transitions.CastleDungeonToUpper:ShufflableExit('Creepy Castle Dungeon to Upper Cave',Regions.Dungeon,TransitionBack(Regions.UpperCave,'From Dungeon',Transitions.CastleUpperToDungeon))}